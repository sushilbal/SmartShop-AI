version: '3.8'
services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - smartshop_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    ports:
      - "8000:8000"
    networks:
      - smartshop_net
    volumes:
      - ./backend:/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - smartshop_net
    depends_on:
      - backend

  # New service to initialize the database and load data
  db_init:
    build:
      context: . # The current directory has all the files
      dockerfile: ./database/Dockerfile_init # Create a new Dockerfile
    depends_on:
      - db # Ensure the database is running first
    environment: # Pass DB credentials as environment variables
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    networks:
      - smartshop_net
    volumes:
      - ./scripts:/app/scripts # Mount the directory with the python script
    command: ["python", "/app/scripts/populate_db.py"]

networks:
  smartshop_net:
    driver: bridge

volumes:
  db_data:
